#!/usr/bin/python
"""HTTP header sniffer for exercise 3.6"""
from scapy.all import *

def get_HTTPheader(packet):
    try:
        header = packet.load
        if "HTTP/1.1" in header:
            print "[*]", packet[IP].src, "=>", packet[IP].dst
            print header[:header.find('\r\n\r\n')]
            print '\n\n'
    except:
        pass

#pkts = sniff(iface="eth1", filter="tcp port 80", lfilter=lambda p: "HTTP" in str(p),count=30, prn=get_HTTPheader)


def printHttpData(pkt):
    httpLoad = pkt.sprintf("%Raw.load%")
    print pkt.summary()
    #print httpLoad
    if httpLoad.startswith("'GET") or httpLoad.startswith("'POST"):
        httpData = httpLoad[1:-1].split("\\r\\n")
        a = httpData[0].split()
        print "GET/POST data: ", a[1]
        del httpData[0]
        for item in httpData:
            print item
    elif httpLoad.startswith("'HTTP"):
        httpData = httpLoad[1:-1].split("\\r\\n")
        del httpData[0]
        for item in httpData:
            print item
    print "-----------------------------------------------"

sniff(filter="tcp port 80", prn=printHttpData, store=0)
